version: '3.9'

services:

    cyberpython:
        build:
            context: ./src/server/
            dockerfile: ./Dockerfile
        command: gunicorn --user www-data --workers 16 --timeout 60 --access-logfile /server/logs/gunicorn_access.log --error-logfile /server/logs/gunicorn_error.log --capture-output --log-level info --bind 0.0.0.0:8000 server.wsgi:application
        restart: always
        volumes:
            - ./logs/:/server/logs:rw
            - ./src/server:/server:rw
        depends_on:
            - db
            - migration
        deploy:
            replicas: 2
        secrets:
            - host_ssh_key

    migration:
        build:
            context: ./src/server/
            dockerfile: ./Dockerfile
        command: >
            bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput&& ./update_modules_database.sh"
        volumes:
            - ./src/server:/server:rw
            - static:/server/static:rw

    nginx_server:
        build:
            context: ./src/nginx/
            dockerfile: ./Dockerfile
        ports:
            - "80:80"
        restart: always
        volumes:
            - ./logs/:/nginx/logs:rw
            - static:/static:rw
        depends_on:
            - cyberpython
    db:
        image: postgres:13
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - "POSTGRES_HOST_AUTH_METHOD=trust"

volumes:
    static:
    postgres_data:


secrets:
    host_ssh_key:
        file: ~/.ssh/linode
